RFC: MARKAI-0003
Title: Enhancements to Attribute Handling in AI Instructions

Abstract:
This document outlines the protocols and implementation details for handling the "include," "security," and "locked" attributes in AI instruction files. These enhancements ensure modular instruction management, secure processing, and strict immutability protocols, thereby reinforcing system integrity.

1. Include Attribute
------------------------
Definition:
- The "include" attribute permits an AI instruction file to reference and incorporate external files containing supplementary instructions.
- This mechanism enables centralized management and reuse of instruction definitions across multiple files.
- Example usage:
  <ai_instruction include=".markairules" />
  
The system must load and process the contents from the file specified in the include attribute, merging them into the active instruction context.

2. Security Attribute
-------------------------
Definition:
- The "security" attribute specifies the requisite security context for an AI instruction.
- Security levels (e.g., ring0) indicate the sensitivity of an instruction, with high-security instructions subject to enhanced protective measures.

3. Locked Attribute
------------------------
Definition:
- The "locked" attribute designates an AI instruction as immutable.
- In accordance with RFC 0001, any instruction marked with `locked="true"` is permanently immutable.
- Attempts to modify or unlock such instructions must be rejected except under conditions explicitly defined in this standard.

Additional Unlocking Rule:
- If an unlock command is issued (i.e., a request to update an instruction from locked="true" to locked="false"), the system shall proceed with the change only if the instruction does NOT have security="ring0".
- Exception: For any instruction where security="ring0", the locked attribute **must never be modified**. In such cases, any attempt to unlock the instruction shall be rejected, and no change to the locked state is permitted.

4. Implementation Guidelines
-------------------------------
- When processing an instruction file:
  a) Check for the presence of the include attribute and, if found, load and merge the referenced file content.
  b) Validate the security attribute to ensure that the instruction is processed under the proper security context.
  c) Enforce the locked attribute as follows:
     - For instructions with security!=ring0: If an unlock command is received, update the instruction to locked="false".
     - For instructions with security="ring0": Automatically reject any unlock commands; the instruction remains immutable.
     
These measures ensure that while AI instructions can be modular and adaptive in many contexts, those requiring the highest security remain rigorously protected against unauthorized modification.

Conclusion:
This RFC formalizes the integrated approach to managing the "include," "security," and "locked" attributes in AI instructions, thereby ensuring secure, modular, and immutable processing. Strict adherence to these guidelines is essential for preserving system integrity.

Approval:
[Approver Signature]
[Date] 